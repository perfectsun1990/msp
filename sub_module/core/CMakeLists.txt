
PROJECT(mediacore)

append_default_search_paths(CMAKE_PREFIX_PATH, OFF)

#
# 针对FFmpeg通用配置,定位包.
FIND_PACKAGE(FFmpeg REQUIRED
	COMPONENTS avcodec avfilter avdevice avutil swscale avformat swresample postproc)
INCLUDE_DIRECTORIES(${FFmpeg_INCLUDE_DIR})

#
# 针对SDL2  通用配置,定位包.
#FIND_PACKAGE(SDL2  REQUIRED)
#INCLUDE_DIRECTORIES(${SDL2_INCLUDE_DIR})

#
# 针对libVLC通用配置,定位包.
FIND_PACKAGE(LIBVLC  REQUIRED)
INCLUDE_DIRECTORIES(${LIBVLC_INCLUDE_DIR})

IF(WIN32)
ADD_DEFINITIONS(-DDLL_EXPORT -DUNICODE -D_UNICODE -D_CRT_SECURE_NO_WARNINGS -D_CRT_NONSTDC_NO_WARNINGS)
SET(CMAKE_EXE_LINKER_FLAGS    "/SAFESEH:NO")
SET(CMAKE_SHARED_LINKER_FLAGS "/SAFESEH:NO")
SET(CMAKE_STATIC_LINKER_FLAGS "/SAFESEH:NO")
SET(CMAKE_MODULE_LINKER_FLAGS "/SAFESEH:NO")
ENDIF()

SET(MEDIACORE_HEADERS 
	mediacore.hpp)
SET(MEDIACORE_SOURCES 
	mediacore.cpp)
SOURCE_GROUP(${PROJECT_NAME}		 FILES			${MEDIACORE_SOURCES} ${MEDIACORE_HEADERS})
LIST(APPEND ALL_SOURCES_AND_HEADERS  IMediaCore.hpp ${MEDIACORE_SOURCES} ${MEDIACORE_HEADERS})

IF(CMAKE_LIBRARY_TEST)
	ADD_EXECUTABLE(${PROJECT_NAME}  	${ALL_SOURCES_AND_HEADERS})
	ADD_DEFINITIONS(-DMEDIACORE_TEST)
ELSE()
	ADD_LIBRARY(${PROJECT_NAME}  MODULE ${ALL_SOURCES_AND_HEADERS})
	#ADD_LIBRARY(${PROJECT_NAME}  STATIC ${ALL_SOURCES_AND_HEADERS})
ENDIF()

TARGET_LINK_LIBRARIES(${PROJECT_NAME}
	${FFmpeg_LIBRARY}
	${SDL2_LIBRARY}
	${LIBVLC_LIBRARY})
	
IF(${CMAKE_BUILD_TYPE} MATCHES "Debug")
	SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES OUTPUT_NAME "mediacored")
ENDIF()	
	