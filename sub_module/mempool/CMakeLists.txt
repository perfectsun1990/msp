
PROJECT(mempool)

append_default_search_paths(CMAKE_PREFIX_PATH, OFF)

#
# 针对FFmpeg通用配置,定位包.
FIND_PACKAGE(FFmpeg REQUIRED
	COMPONENTS avcodec avfilter avdevice avutil swscale avformat swresample postproc)
INCLUDE_DIRECTORIES(${FFmpeg_INCLUDE_DIR})

#
# 针对SDL2  通用配置,定位包.
#FIND_PACKAGE(SDL2  REQUIRED)
#INCLUDE_DIRECTORIES(${SDL2_INCLUDE_DIR})

#
# 针对libVLC通用配置,定位包.
#FIND_PACKAGE(LIBVLC  REQUIRED)
#INCLUDE_DIRECTORIES(${LIBVLC_INCLUDE_DIR})

IF( MSVC )
	IF(CMAKE_CXX_FLAGS MATCHES "/W[0-4]")
		STRING(REGEX REPLACE   "/W[0-4]" "/W3" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
	ELSE()
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W3")
	ENDIF()
	# Disable pointless constant condition warnings
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /wd4127 /wd4201 /wd4819 /Zi")
		SET(CMAKE_EXE_LINKER_FLAGS    "/SAFESEH:NO")
	SET(CMAKE_SHARED_LINKER_FLAGS "/SAFESEH:NO")
	SET(CMAKE_STATIC_LINKER_FLAGS "/SAFESEH:NO")
	SET(CMAKE_MODULE_LINKER_FLAGS "/SAFESEH:NO")
	ADD_DEFINITIONS(-DUNICODE -D_UNICODE -D_CRT_SECURE_NO_WARNINGS -D_CRT_NONSTDC_NO_WARNINGS)
ENDIF()

SET(MEDIACORE_HEADERS 
	mempool.hpp)
SET(MEDIACORE_SOURCES 
	mempool.cpp)
SOURCE_GROUP(${PROJECT_NAME}		 FILES			${MEDIACORE_SOURCES} ${MEDIACORE_HEADERS})
LIST(APPEND ALL_SOURCES_AND_HEADERS  				${MEDIACORE_SOURCES} ${MEDIACORE_HEADERS})

IF(CMAKE_LIBRARY_TEST)
	ADD_EXECUTABLE(${PROJECT_NAME}  	${ALL_SOURCES_AND_HEADERS})
	ADD_DEFINITIONS(-DUNITS_TEST)
ELSE()
	ADD_LIBRARY(${PROJECT_NAME}			SHARED ${ALL_SOURCES_AND_HEADERS})
#	ADD_LIBRARY(${PROJECT_NAME}static	STATIC ${ALL_SOURCES_AND_HEADERS})
	ADD_DEFINITIONS(-DDLL_EXPORT)
ENDIF()

TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${FFmpeg_LIBRARY})
	
#IF(${CMAKE_BUILD_TYPE} MATCHES "Debug")
#	SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES OUTPUT_NAME "mempool")
#ENDIF()	
	